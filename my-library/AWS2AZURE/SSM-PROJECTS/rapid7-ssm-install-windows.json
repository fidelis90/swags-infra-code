{
  "schemaVersion": "2.2",
  "description": "Install the Rapid7 Insight Agent on Windows.",
  "parameters": {
    "source": {
      "description": "(Required) Specify the information required.",
      "type": "String"
    },
    "token": {
      "type": "String",
      "description": "(Required) Specify a token for the Rapid7 Insight Agent."
    },
    "workingDirectory": {
      "type": "String",
      "default": "C:\\Users\\Administrator\\AppData\\Local\\Temp",
      "description": "(Optional) The path to the working directory.",
      "maxChars": 4096
    },
    "executionTimeout": {
      "type": "String",
      "default": "600",
      "description": "(Optional) The time in seconds for a command to complete before it is considered to have failed. Default is 600 (10 minutes). Maximum is 172800 (48 hours).",
      "allowedPattern": "([1-9][0-9]{0,4})|(1[0-6][0-9]{4})|(17[0-1][0-9]{3})|(172[0-7][0-9]{2})|(172800)"
    }
  },
  "mainSteps": [
    {
      "action": "aws:runPowerShellScript",
      "name": "InstallInsightAgent",
      "inputs": {
        "runCommand": [
          "$r7folder = \"{{ workingDirectory }}\\r7insight\"",
          "New-Item -ItemType directory -Path \"$r7folder\"",
          "$service = get-service -name ir_agent -ErrorAction SilentlyContinue",
          "if (-Not $service) {",
          "write-host \"Agent not installed, installing.\"",
          "$url = \"{{ source }}\"",
          "$output = \"$r7folder\\agent_installer.msi\"",
          "Invoke-WebRequest -Uri $url -OutFile $output",
          "$Arguments = @(\"/i\", \"$r7folder\\agent_installer.msi\", \"/l*v\", \"$r7folder\\debug.log\", \"CUSTOMTOKEN={{ token }}\", \"/quiet\", \"/qn\" )",
          "Start-Process msiexec -ArgumentList $Arguments -Wait -NoNewWindow",
          "Get-Content \"$r7folder\\debug.log\" | foreach {Write-Output $_}",
          "} else {",
          "write-host \"Agent already installed, exiting.\"",
          "}",
          "Remove-Item -Recurse -Force \"$r7folder\""
        ],
        "workingDirectory": "{{ workingDirectory }}",
        "timeoutSeconds": "{{ executionTimeout }}"
      }
    }
  ]
}
